{
  "version": "alpha-02",
  "isAllowedTests": [
    {
      "id": "basic allow match",
      "actorRules": ["allow/blog/read"],
      "actionScopes": ["blog/read"],
      "result": true
    },
    {
      "id": "basic deny match",
      "actorRules": ["deny/blog/read"],
      "actionScopes": ["blog/read"],
      "result": false
    },
    {
      "id": "no match is deny",
      "actorRules": ["deny/blog/read"],
      "actionScopes": ["accounts/read"],
      "result": false
    },
    {
      "id": "no match is deny 2",
      "actorRules": ["deny/blog/read"],
      "actionScopes": ["blog/reader"],
      "result": false
    },
    {
      "id": "actor shorter then action",
      "actorRules": ["allow/blog/public"],
      "actionScopes": ["blog/public/read"],
      "result": false
    },
    {
      "id": "action shorter then actor",
      "actorRules": ["allow/blog/public/read"],
      "actionScopes": ["blog/public"],
      "result": false
    },
    {
      "id": "match with array",
      "actorRules": ["allow/pzazz/jazzy/fuzzy|folky|buzzy"],
      "actionScopes": ["pzazz/jazzy/buzzy"],
      "result": true
    },
    {
      "id": "match with variable",
      "actorRules": ["allow/quick/zappy/@name01"],
      "actionScopes": ["quick/zappy/value01"],
      "variables": {
          "name01": "value01"
      },
      "result": true
    },
    {
      "id": "match with wildcard",
      "actorRules": ["allow/alamo/aline/*"],
      "actionScopes": ["alamo/aline/anchor"],
      "variables": {
          "name01": "value01"
      },
      "result": true
    },
    {
      "id": "actor rule has more wildcards then action rule",
      "actorRules": ["allow/*/*/*"],
      "actionScopes": ["alamo/anchor"],
      "result": false
    },
    {
      "id": "match with super wildcard",
      "actorRules": ["allow/antic/**"],
      "actionScopes": ["antic/apeek/antre"],
      "variables": {
          "name01": "value01"
      },
      "result": true
    },
    {
      "id": "invalid special character in actor",
      "actorRules": ["allow/blog/:15"],
      "actionScopes": ["blog/read"],
      "error": "scopie-100 in actor: invalid character ':'"
    },
    {
      "id": "invalid special character in action",
      "actorRules": ["allow/blog/read"],
      "actionScopes": ["blog/:15"],
      "error": "scopie-100 in action: invalid character ':'"
    },
    {
      "id": "variable inside an array group",
      "actorRules": ["allow/blog/read|@group|write"],
      "actionScopes": ["blog/exec"],
      "error": "scopie-101 in actor: variable 'group' found in array block"
    },
    {
      "id": "variable and the end of an array group",
      "actorRules": ["allow/blog/read|write|@group"],
      "actionScopes": ["blog/exec"],
      "error": "scopie-101 in actor: variable 'group' found in array block"
    },
    {
      "id": "wildcard inside an array group",
      "actorRules": ["allow/blog/read|*|write"],
      "actionScopes": ["blog/exec"],
      "error": "scopie-102 in actor: wildcard found in array block"
    },
    {
      "id": "wildcard at the end of an array group",
      "actorRules": ["allow/blog/read|write|*"],
      "actionScopes": ["blog/exec"],
      "error": "scopie-102 in actor: wildcard found in array block"
    },
    {
      "id": "super wildcard inside an array group",
      "actorRules": ["allow/blog/read|**|write"],
      "actionScopes": ["blog/exec"],
      "error": "scopie-103 in actor: super wildcard found in array block"
    },
    {
      "id": "super wildcard at the end of an array group",
      "actorRules": ["allow/blog/read|write|**"],
      "actionScopes": ["blog/exec"],
      "error": "scopie-103 in actor: super wildcard found in array block"
    },
    {
      "id": "variable not found",
      "actorRules": ["allow/blog/@group","allow/blog/read"],
      "actionScopes": ["blog/exec"],
      "variables": {
          "name01": "value01"
      },
      "error": "scopie-104 in actor: variable 'group' not found"
    },
    {
      "id": "variable not found 2",
      "actorRules": ["allow/blog/@group"],
      "actionScopes": ["blog/exec"],
      "variables": {
          "name01": "value01"
      },
      "error": "scopie-104 in actor: variable 'group' not found"
    },
    {
      "id": "super wildcard not in the last block",
      "actorRules": ["allow/blog/**/create"],
      "actionScopes": ["blog/exec"],
      "error": "scopie-105 in actor: super wildcard not in the last block"
    },
    {
      "id": "empty actor array",
      "actorRules": [],
      "actionScopes": ["blog/exec"],
      "result": false
    },
    {
      "id": "empty actor rule",
      "actorRules": [""],
      "actionScopes": ["blog/exec"],
      "error": "scopie-106: actor rule was empty"
    },
    {
      "id": "empty action array",
      "actorRules": ["allow/accounts/read"],
      "actionScopes": [],
      "error": "scopie-106: action scopes was empty"
    },
    {
      "id": "empty action rule",
      "actorRules": ["allow/accounts/read"],
      "actionScopes": [""],
      "error": "scopie-106: action scope was empty"
    }
  ],
  "scopeValidTests": [
    {
      "id": "simple scope",
      "scope": "allow/blog/read"
    },
    {
      "id": "with wildcard",
      "scope": "allow/blog/*/read"
    },
    {
      "id": "with super wildcard",
      "scope": "allow/blog/**"
    },
    {
      "id": "with array",
      "scope": "allow/blog/primary|secondary|third/read"
    },
    {
      "id": "with variable",
      "scope": "allow/blog/@owner/read"
    },
    {
      "id": "combination",
      "scope": "allow/blog/*/@region/primary|secondary/**"
    },
    {
      "id": "invalid special character",
      "scope": "allow/blog/:15",
      "error": "scopie-100: invalid character ':'"
    },
    {
      "id": "variable inside an array group",
      "scope": "allow/blog/read|@group|write",
      "error": "scopie-101: variable 'group' found in array block"
    },
    {
      "id": "variable and the end of an array group",
      "scope": "allow/blog/read|write|@group",
      "error": "scopie-101: variable 'group' found in array block"
    },
    {
      "id": "wildcard inside an array group",
      "scope": "allow/blog/read|*|write",
      "error": "scopie-102: wildcard found in array block"
    },
    {
      "id": "wildcard at the end of an array group",
      "scope": "allow/blog/read|write|*",
      "error": "scopie-102: wildcard found in array block"
    },
    {
      "id": "super wildcard inside an array group",
      "scope": "allow/blog/read|**|write",
      "error": "scopie-103: super wildcard found in array block"
    },
    {
      "id": "super wildcard at the end of an array group",
      "scope": "allow/blog/read|write|**",
      "error": "scopie-103: super wildcard found in array block"
    },
    {
      "id": "super wildcard not in the last block",
      "scope": "allow/blog/**/create",
      "error": "scopie-105: super wildcard not in the last block"
    },
    {
      "id": "empty scope",
      "scope": "",
      "error": "scopie-106: scope was empty"
    }
  ],
  "minimizeTests": [
    {
      "id": "duplicate scope",
      "scopesOrRules": ["blog/read", "blog/read"],
      "result": ["blog/read"]
    },
    {
      "id": "merge array",
      "scopesOrRules": ["blog/create", "blog/read"],
      "result": ["blog/create|read"]
    },
    {
      "id": "append to array",
      "scopesOrRules": ["blog/create", "blog/read|update"],
      "result": ["blog/create|read|update"]
    },
    {
      "id": "wildcard reduction",
      "scopesOrRules": ["blog/create", "blog/read", "blog/*"],
      "result": ["blog/*"]
    },
    {
      "id": "super wildcard reduction",
      "scopesOrRules": ["blog/create", "blog/read", "blog/**"],
      "result": ["blog/**"]
    },
    {
      "id": "super wildcard reduction at two levels",
      "scopesOrRules": ["blog/tech/read", "blog/tech/write", "blog/**"],
      "result": ["blog/**"]
    },
    {
      "id": "remove allow if it exactly matches a deny",
      "scopesOrRules": ["allow/blog/read", "deny/blog/read"],
      "result": ["deny/blog/read"]
    },
    {
      "id": "remove allow if it is under a deny",
      "scopesOrRules": ["allow/blog/tech/read", "deny/blog/**"],
      "result": ["deny/blog/**"]
    },
    {
      "id": "deep nested scope is still array swapped",
      "scopesOrRules": ["a/b/c/d/e", "a/f/c/d/e"],
      "result": ["a/b/c/d/e", "a/f/c/d/e"]
    },
    {
      "id": "deep nested scopes with top and bottom level difference is not minimized",
      "scopesOrRules": ["a/b/c/d/e", "a/f/c/d/g"],
      "result": ["a/b/c/d/e", "a/f/c/d/g"]
    }
  ],
  "benchmarks": [
    {
      "id": "allow,1actor,1rule,1block1length",
      "actorRules": ["allow/A"],
      "actionScopes": ["A"],
      "result": true
    },
    {
      "id": "deny,1actor,1rule,1block1length",
      "actorRules": ["deny/A"],
      "actionScopes": ["A"],
      "result": false
    },
    {
      "id": "allow,5actor,3scopes,3blocks10length,best",
      "actorRules": ["allow/razzmatazz/vajazzling/buckjumper", "allow/blackjacks/unpuzzling/unmuzzling", "allow/jumboizing/embezzling/buckjumped", "allow/whizzbangs/squeezebox/puzzlingly", "allow/buzzworthy/bemuzzling/jazzercise"],
      "actionScopes": ["razzmatazz/vajazzling/buckjumper", "buzzphase/dizzingly/puzzlement", "schemozzle/scuzzballs/zigzagging"],
      "result": true
    },
    {
      "id": "allow,5actor,3scopes,3blocks10length,worst",
      "actorRules": ["allow/razzmatazz/vajazzling/buckjumper", "allow/blackjacks/unpuzzling/unmuzzling", "allow/jumboizing/embezzling/buckjumped", "allow/whizzbangs/squeezebox/puzzlingly", "allow/buzzworthy/bemuzzling/jazzercise"],
      "actionScopes": ["buzzphase/dizzingly/puzzlement", "schemozzle/scuzzballs/zigzagging", "buzzworthy/bemuzzling/jazzercise"],
      "result": true
    },
    {
      "id": "deny,5actor,3scopes,3blocks10length,best",
      "actorRules": ["deny/razzmatazz/vajazzling/buckjumper", "allow/blackjacks/unpuzzling/unmuzzling", "allow/jumboizing/embezzling/buckjumped", "allow/whizzbangs/squeezebox/puzzlingly", "allow/buzzworthy/bemuzzling/jazzercise"],
      "actionScopes": ["razzmatazz/vajazzling/buckjumper", "buzzphase/dizzingly/puzzlement", "schemozzle/scuzzballs/zigzagging"],
      "result": false
    },
    {
      "id": "deny,5actor,3scopes,3blocks10length,worst",
      "actorRules": ["allow/razzmatazz/vajazzling/buckjumper", "allow/blackjacks/unpuzzling/unmuzzling", "allow/jumboizing/embezzling/buckjumped", "allow/whizzbangs/squeezebox/puzzlingly", "deny/buzzworthy/bemuzzling/jazzercise"],
      "actionScopes": ["buzzphase/dizzingly/puzzlement", "schemozzle/scuzzballs/zigzagging", "buzzworthy/bemuzzling/jazzercise"],
      "result": false
    },
    {
      "id": "allow,2actor,1rule,3block5length,3array,best",
      "actorRules": ["allow/pzazz|bezzy|bizzy/jazzy|fizzy|pozzy/buzzy|fuzzy|muzzy", "allow/whizz|zhuzh|abuzz/scuzz|dizzy|frizz/huzza|mezza|mezzo"],
      "actionScopes": ["pzazz/jazzy/buzzy"],
      "result": true
    },
    {
      "id": "allow,2actor,1rule,3block5length,3array,worst",
      "actorRules": ["allow/pzazz|bezzy|bizzy/jazzy|fizzy|pozzy/buzzy|fuzzy|muzzy", "allow/whizz|zhuzh|abuzz/scuzz|dizzy|frizz/huzza|mezza|mezzo"],
      "actionScopes": ["abuzz/frizz/mezzo"],
      "result": true
    },
    {
      "id": "deny,2actor,1rule,3block5length,3array,best",
      "actorRules": ["deny/pzazz|bezzy|bizzy/jazzy|fizzy|pozzy/buzzy|fuzzy|muzzy", "allow/whizz|zhuzh|abuzz/scuzz|dizzy|frizz/huzza|mezza|mezzo"],
      "actionScopes": ["pzazz/jazzy/buzzy"],
      "result": false
    },
    {
      "id": "deny,2actor,1rule,3block5length,3array,worst",
      "actorRules": ["allow/pzazz|bezzy|bizzy/jazzy|fizzy|pozzy/buzzy|fuzzy|muzzy", "deny/whizz|zhuzh|abuzz/scuzz|dizzy|frizz/huzza|mezza|mezzo"],
      "actionScopes": ["abuzz/frizz/mezzo"],
      "result": false
    },
    {
      "id": "allow,3actor,1rule,3block5length,3variables,best",
      "actorRules": ["allow/@name01/@name02/@name03", "allow/jimmy/jimpy/junky", "allow/mujik/muzak/quack"],
      "actionScopes": ["value01/value02/value03"],
      "variables": {
          "name01": "value01",
          "name02": "value02",
          "name03": "value03"
      },
      "result": true
    },
    {
      "id": "allow,3actor,1rule,3block5length,3variables,worst",
      "actorRules": ["allow/jimmy/jimpy/junky", "allow/mujik/muzak/quack", "allow/@name01/@name02/@name03"],
      "actionScopes": ["value01/value02/value03"],
      "variables": {
          "name01": "value01",
          "name02": "value02",
          "name03": "value03"
      },
      "result": true
    },
    {
      "id": "deny,2actor,1rule,3block5length,3variables,best",
      "actorRules": ["deny/@name01/@name02/@name03", "allow/quick/zappy/zippy", "allow/jacks/jocko/jugum"],
      "actionScopes": ["value01/value02/value03"],
      "variables": {
          "name01": "value01",
          "name02": "value02",
          "name03": "value03"
      },
      "result": false
    },
    {
      "id": "deny,2actor,1rule,3block5length,3variables,best",
      "actorRules": ["allow/quick/zappy/zippy", "allow/jacks/jocko/jugum", "deny/@name01/@name02/@name03"],
      "actionScopes": ["value01/value02/value03"],
      "variables": {
          "name01": "value01",
          "name02": "value02",
          "name03": "value03"
      },
      "result": false
    },
    {
      "id": "allow,3actor,1rule,3block5length,wildcard,best",
      "actorRules": ["allow/jivey/*/juicy", "allow/jimmy/jimpy/junky", "allow/mujik/muzak/quack"],
      "actionScopes": ["jivey/juked/juicy"],
      "result": true
    },
    {
      "id": "allow,3actor,1rule,3block5length,wildcard,worst",
      "actorRules": ["allow/jimmy/jimpy/junky", "allow/mujik/muzak/quack", "allow/juffs/*/jaggy"],
      "actionScopes": ["juffs/jokey/jaggy"],
      "result": true
    },
    {
      "id": "deny,2actor,1rule,3block5length,wildcard,best",
      "actorRules": ["deny/khazi/*/pujah", "allow/quick/zappy/zippy", "allow/jacks/jocko/jugum"],
      "actionScopes": ["khazi/zincy/pujah"],
      "result": false
    },
    {
      "id": "deny,2actor,1rule,3block5length,wildcard,best",
      "actorRules": ["allow/quick/zappy/zippy", "allow/jacks/jocko/jugum", "deny/zilch/*/kanzu"],
      "actionScopes": ["zilch/karzy/kanzu"],
      "result": false
    },
    {
      "id": "allow,3actor,1rule,3block5length,superwildcard,best",
      "actorRules": ["allow/jivey/**", "allow/jimmy/jimpy/junky", "allow/mujik/muzak/quack"],
      "actionScopes": ["jivey/juked/juicy"],
      "result": true
    },
    {
      "id": "allow,3actor,1rule,3block5length,superwildcard,worst",
      "actorRules": ["allow/jimmy/jimpy/junky", "allow/mujik/muzak/quack", "allow/juffs/**"],
      "actionScopes": ["juffs/jokey/jaggy"],
      "result": true
    },
    {
      "id": "deny,2actor,1rule,3block5length,superwildcard,best",
      "actorRules": ["deny/khazi/**", "allow/quick/zappy/zippy", "allow/jacks/jocko/jugum"],
      "actionScopes": ["khazi/zincy/pujah"],
      "result": false
    },
    {
      "id": "deny,2actor,1rule,3block5length,superwildcard,best",
      "actorRules": ["allow/quick/zappy/zippy", "allow/jacks/jocko/jugum", "deny/zilch/**"],
      "actionScopes": ["zilch/karzy/kanzu"],
      "result": false
    }
  ]
}
